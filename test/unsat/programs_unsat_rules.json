{"test":[
    {
    "problem_path" : "test/unsat/problems/3col_unsat.asp",
    "ground_rules" : "color(1,green) | color(1,red) | color( 1,blue) :- node(1).,color(2,green) | color(2,red) | color( 2,blue) :- node(2).,color(3,green) | color(3,red) | color( 3,blue) :- node(3).,color(4,green) | color(4,red) | color( 4,blue) :- node(4).:- color(2,red), color(1,red), 2 != 1, edge(2,1).,:- color(1,red), color(4,red), 1 != 4, edge(1,4).,:- color(1,blue), color(4,blue), 1 != 4, edge(1,4).,:- color(1,green), color(4,green), 1 != 4, edge(1,4).,:- color(3,red), color(1,red), 3 != 1, edge(3,1).,:- color(3,blue), color(1,blue), 3 != 1, edge(3,1).,:- color(3,green), color(1,green), 3 != 1, edge(3,1).,:- color(1,blue), color(2,blue), 1 != 2, edge(1,2).,:- color(1,green), color(2,green), 1 != 2, edge(1,2).,:- color(3,blue), color(2,blue), 3 != 2, edge(3,2).,:- color(4,red), color(2,red), 4 != 2, edge(4,2).,:- color(4,blue), color(2,blue), 4 != 2, edge(4,2).,:- color(4,green), color(2,green), 4 != 2, edge(4,2).,:- color(2,red), color(3,red), 2 != 3, edge(2,3).,:- color(2,green), color(3,green), 2 != 3, edge(2,3).,:- color(4,red), color(3,red), 4 != 3, edge(4,3).,:- color(4,blue), color(3,blue), 4 != 3, edge(4,3).,:- color(4,green), color(3,green), 4 != 3, edge(4,3).",
    "non_ground_rules" : "color(X,green) | color(X,red) | color( X,blue) :- node(X).:- color(X,C), color(Y,C), X != Y, edge(X,Y).",
    "number_of_muses" : "1",
    "mus_index_for_ground_rules" : "0"
    },
    {
        "problem_path" : "test/unsat/problems/3col_sat.asp",
        "ground_rules" : "",
        "non_ground_rules" : "",
        "number_of_muses" : "1",
        "mus_index_for_ground_rules" : "0"
    },
    {
        "problem_path" : "test/unsat/problems/example_sat.asp",
        "ground_rules" : "",
        "non_ground_rules" : "",
        "number_of_muses" : "1",
        "mus_index_for_ground_rules" : "0"
    },
    {
        "problem_path" : "test/unsat/problems/example_unsat.asp",
        "ground_rules" : "a(1) :- b(1).c(1) :- a(1), b(2), 1 < 2.:- c(1).",
        "non_ground_rules" : "a(X) :- b(X).c(X) :- a(X), b(Y), X < Y.:- c(X).",
        "number_of_muses" : "1",
        "mus_index_for_ground_rules" : "0"
    },
    {
        "problem_path" : "test/unsat/problems/example_unsat.asp",
        "ground_rules" : "a(1) :- b(1).c(1) :- a(1), b(3), 1 < 3.:- c(1).",
        "non_ground_rules" : "a(X) :- b(X).c(X) :- a(X), b(Y), X < Y.:- c(X).a(X) :- b(X).c(X) :- a(X), b(Y), X < Y.:- c(X).a(X) :- b(X).c(X) :- a(X), b(Y), X < Y.:- c(X).",
        "number_of_muses" : "3",
        "mus_index_for_ground_rules" : "1"
    },
    {
        "problem_path" : "test/unsat/problems/3col_unsat.asp",
        "ground_rules" : "color(1,green) | color(1,red) | color( 1,blue) :- node(1).,color(2,green) | color(2,red) | color( 2,blue) :- node(2).,color(3,green) | color(3,red) | color( 3,blue) :- node(3).,color(4,green) | color(4,red) | color( 4,blue) :- node(4).:- color(1,red), color(4,red), 1 != 4, edge(1,4).,:- color(1,blue), color(4,blue), 1 != 4, edge(1,4).,:- color(1,green), color(4,green), 1 != 4, edge(1,4).,:- color(3,red), color(1,red), 3 != 1, edge(3,1).,:- color(3,blue), color(1,blue), 3 != 1, edge(3,1).,:- color(3,green), color(1,green), 3 != 1, edge(3,1).,:- color(1,red), color(2,red), 1 != 2, edge(1,2).,:- color(1,blue), color(2,blue), 1 != 2, edge(1,2).,:- color(1,green), color(2,green), 1 != 2, edge(1,2).,:- color(3,blue), color(2,blue), 3 != 2, edge(3,2).,:- color(4,red), color(2,red), 4 != 2, edge(4,2).,:- color(4,blue), color(2,blue), 4 != 2, edge(4,2).,:- color(4,green), color(2,green), 4 != 2, edge(4,2).,:- color(2,red), color(3,red), 2 != 3, edge(2,3).,:- color(2,green), color(3,green), 2 != 3, edge(2,3).,:- color(4,red), color(3,red), 4 != 3, edge(4,3).,:- color(4,blue), color(3,blue), 4 != 3, edge(4,3).,:- color(4,green), color(3,green), 4 != 3, edge(4,3).",
        "non_ground_rules" : "color(X,green) | color(X,red) | color( X,blue) :- node(X).:- color(X,C), color(Y,C), X != Y, edge(X,Y).color(X,green) | color(X,red) | color( X,blue) :- node(X).:- color(X,C), color(Y,C), X != Y, edge(X,Y).color(X,green) | color(X,red) | color( X,blue) :- node(X).:- color(X,C), color(Y,C), X != Y, edge(X,Y).",
        "number_of_muses" : "3",
        "mus_index_for_ground_rules" : "1"
    },
    {
        "problem_path" : "test/unsat/problems/example_unsat_strings.asp",
        "ground_rules" : "a(\"1\") :- b(\"1\").c(\"1\") :- a(\"1\"), b(\"1\").:- c(\"1\").",
        "non_ground_rules" : "a(X) :- b(X).c(X) :- a(X), b(Y).:- c(X).",
        "number_of_muses" : "1",
        "mus_index_for_ground_rules" : "0"
    },
    {
        "problem_path" : "test/unsat/problems/example_unsat_string_in_rules.asp",
        "ground_rules" : "a(\"1\") :- b(\"1\"), d(\"1\", \"try constant in rule X Y\").c(\"1\") :- a(\"1\"), b(\"1\").:- c(\"1\").",
        "non_ground_rules" : "a(X) :- b(X), d(X, Y).c(X) :- a(X), b(Y).:- c(X).",
        "number_of_muses" : "1",
        "mus_index_for_ground_rules" : "0"
    },
    {
        "problem_path" : "test/unsat/problems/3col_unsat_strings.asp",
        "ground_rules" : "color(1, \"color(1,red):-node(1).\") | color(1,\"red\") | color(1,\"blue\") :- node(1).,color(2, \"color(2,red):-node(2).\") | color(2,\"red\") | color(2,\"blue\") :- node(2).,color(3, \"color(3,red):-node(3).\") | color(3,\"red\") | color(3,\"blue\") :- node(3).,color(4, \"color(4,red):-node(4).\") | color(4,\"red\") | color(4,\"blue\") :- node(4).:- color(2,\"red\"), color(1,\"red\"), 2 != 1, edge(2,1).,:- color(1,\"red\"), color(4,\"red\"), 1 != 4, edge(1,4).,:- color(1,\"blue\"), color(4,\"blue\"), 1 != 4, edge(1,4).,:- color(1,\"color(X,red):-node(X).\"), color(4,\"color(X,red):-node(X).\"), 1 != 4, edge(1,4).,:- color(3,\"red\"), color(1,\"red\"), 3 != 1, edge(3,1).,:- color(3,\"blue\"), color(1,\"blue\"), 3 != 1, edge(3,1).,:- color(3,\"color(X,red):-node(X).\"), color(1,\"color(X,red):-node(X).\"), 3 != 1, edge(3,1).,:- color(1,\"blue\"), color(2,\"blue\"), 1 != 2, edge(1,2).,:- color(1,\"color(X,red):-node(X).\"), color(2,\"color(X,red):-node(X).\"), 1 != 2, edge(1,2).,:- color(3,\"blue\"), color(2,\"blue\"), 3 != 2, edge(3,2).,:- color(4,\"red\"), color(2,\"red\"), 4 != 2, edge(4,2).,:- color(4,\"blue\"), color(2,\"blue\"), 4 != 2, edge(4,2).,:- color(4,\"color(X,red):-node(X).\"), color(2,\"color(X,red):-node(X).\"), 4 != 2, edge(4,2).,:- color(2,\"red\"), color(3,\"red\"), 2 != 3, edge(2,3).,:- color(2,\"color(X,red):-node(X).\"), color(3,\"color(X,red):-node(X).\"), 2 != 3, edge(2,3).,:- color(4,\"red\"), color(3,\"red\"), 4 != 3, edge(4,3).,:- color(4,\"blue\"), color(3,\"blue\"), 4 != 3, edge(4,3).,:- color(4,\"color(X,red):-node(X).\"), color(3,\"color(X,red):-node(X).\"), 4 != 3, edge(4,3).",
        "non_ground_rules" : "color(X, \"color(X,red):-node(X).\") | color(X,\"red\") | color(X,\"blue\") :- node(X).:- color(X,C), color(Y,C), X != Y, edge(X,Y).",
        "number_of_muses" : "1",
        "mus_index_for_ground_rules" : "0"
    },

    {
        "problem_path" : "test/unsat/problems/hampath.asp",
        "ground_rules" : "",
        "non_ground_rules" : "",
        "number_of_muses" : "0",
        "mus_index_for_ground_rules" : "0"
    }
]}